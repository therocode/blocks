#version 120 
#ifdef WOWCORE
layout(location = 0) vec3 vert;
layout(location = 1) vec3 color;
layout(location = 2) vec3 normal;
layout(location = 3) vec2 uv;
#else
attribute vec3 vert;
attribute vec3 color;
attribute vec3 normal;
attribute vec2 uv;
#endif

uniform mat4 modelToWorld;

uniform mat4 worldToCamera;
uniform mat4 cameraToClip;

uniform float time;

varying vec3 vColor;
varying vec3 vNorm;
varying vec3 vLight;

varying vec3 eyeDir;

varying vec3 modelSpace;

varying vec2 texCoord;

varying vec3 posCamSpace;

void main(){
	texCoord = uv;
	modelSpace = vert;

	mat3 normalWorldToCamera = mat3(worldToCamera);
	mat3 normalModelToWorld  = mat3(modelToWorld);
	mat3 normalModelToCamera = normalWorldToCamera * normalModelToWorld ;

    vec4 lightPos =  vec4(100.0, 100.0, 100.0, 1.0);
	lightPos = worldToCamera * lightPos;

	vec4 v =  modelToWorld * vec4(vert, 1.0);
	
	v = worldToCamera * v;
	posCamSpace = v.xyz;
	eyeDir = -v.xyz;
	vec3 ld = normalize(v.xyz-lightPos.xyz);

	vec3 nd =normal;
	nd = normalize(normalModelToWorld * nd);
	nd = normalize(normalWorldToCamera* nd);

	vLight = ld;
	vNorm =  nd; 

	v = cameraToClip * v; 
	//vColor = mix(modelAmbient + modelColor *  color, modelDiffuse *vec3(clamp(dot(nd, ld), .2, 1.0)), 0.5);
	vColor = vec3(1.0) *clamp(dot(nd, ld), .2, 1.0) * color;
	gl_Position = v;
}
